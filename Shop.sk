#Copyright 2021. 규미(Gyumy) all rights reserved.

#[개발환경]
#Java : jre1.8.0_281 build 1.8.0_281-b09
#Bukkit : git-Paper-1618 (MC: 1.12.2)
#Skript : 2.5.3
#Add-on : x

#유튜브 : https://youtu.be/doDNDxrcswE
#블로그 : https://nalag.tistory.com/22
#디스코드 : 규미#7691

#Ver : 0.0.0-alpha1
#Source:  https://github.com/gyumys/Skript-Shop

options:
	a : &b[ &fSHOP &b]&f
	s : &b[ &f수표 &b]&f
	c : &1&2&3&1&r&f
	
on load: #\m = %player%'s money, \u = uuid of %player%, \p  = %player%
	set {shop::point::달러} to "\m"
	set {shop::point::캐쉬} to "cash::\u"
	set {shop::point::원} to "money::\p"
	
on unload:
	delete {shop::point::*}	
command /수표 [<text>] [<text>]:
	permission: shop.point
	trigger:
		if arg 1 is "포인트종류":
			send "&b----------[ &f포인트종류 &b]----------"
			loop {shop::point::*}:
				send "{@s} %loop-index% - %loop-value%"
			stop
		if arg 1 or arg 2 is not set:
			send "&b----------[ &f수표 &b]----------"
			send "{@s} /수표 <포인트> <포인트이름>"
			send "{@s} /수표 포인트목록"
			stop	
		if {shop::point::%arg-2%} is not set:
			send "{@a} %arg-2%는 존재하지 않는 포인트입니다."
		else if arg-1 parsed as number is not number:
			send "{@a} 포인트에는 숫자만 입력할 수 있습니다."
		else:
			give paper named "&f%arg-1%{@c}%arg-2%" with lore "" and "&7우클릭시 %arg-1% %arg-2%를 지급받습니다." to player
on rightclick with paper:
	if name of event-item contains "{@c}":
		set {_point::*} to name of event-item split by "{@c}"
		if {shop::point::%{_point::2}%} is "\m":
			add "%uncolored {_point::1}%" parsed as integer to player's money
			send "{@s} %{_point::1}%%{_point::2}%를 지급받았습니다."
		else:
			set {_t} to "%{shop::point::%{_point::2}%}%"
			replace all "\u" with "%uuid of player%" in {_t}
			replace all "\p" with "%player%" in {_t}
			add "%uncolored {_point::1}%" parsed as integer to {%{_t}%}
			send "{@s} %{_point::1}%%{_point::2}%를 지급받았습니다."
		remove 1 of event-item from player's tool	
function GetShopDisplayItem(name:text,slot:integer) :: item:
	set {_item} to {shop::%{_name}%::item::%{_slot}%}
	if size of {shop::%{_name}%::price.buy::%{_slot}%::*} is not 0:
		loop {shop::%{_name}%::price.buy::%{_slot}%::*}:
			set {_v} to loop-value
			if "%name of {_v}%" is "<none>":
				set {_n} to "%type of {_v}%"
			else:
				set {_n} to name of {_v}
			add item amount of {_v} to {_lore::%{_n}%}	
		add "", "&a[ &a구매 &a] &f- 64개&7(ShiftLeft)&f 1개&7(Left)" to lore of {_item}
		loop {_lore::*}:
			if "%loop-index%" contains "{@c}":
				add "&7- %loop-index%" to lore of {_item}
			else:
				add "&7x &f%loop-value% %loop-index%" to lore of {_item}
	delete {_lore::*}
	if size of {shop::%{_name}%::price.sell::%{_slot}%::*} is not 0:
		loop {shop::%{_name}%::price.sell::%{_slot}%::*}:
			set {_v} to loop-value
			if "%name of {_v}%" is "<none>":
				set {_n} to "%type of {_v}%"
			else:
				set {_n} to name of {_v}
			add item amount of {_v} to {_lore::%{_n}%}	
		add "", "&b[ &b판매 &b] &f- 64개&7(ShiftRight)&f 1개&7(Right)" to lore of {_item}
		loop {_lore::*}:
			if "%loop-index%" contains "{@c}":
				add "&7- %loop-index%" to lore of {_item}
			else:
				add "&7x &f%loop-value% %loop-index%" to lore of {_item}				
	return {_item}
function OpenShopSet(name: text,p: player):
	set {_gui} to chest inventory with 1 rows named "{@a} 설정 {@c}- %{_name}%"
	set slot 1 of {_gui} to paper named "&a아이템 설정" with lore "", "&f클릭시 아이템설정 창으로 이동합니다.", "&f아이템 설정창에 아이템을 올려두고 GUI를 닫으면 상점에" and "&f아이템이 등록됩니다."
	set slot 4 of {_gui} to book named "&6GUI줄 설정" with lore "", "&a좌클릭시 GUI줄 크기를 증가시킵니다. ▲", "&c우클릭시 GUI줄 크기를 감소시킵니다. ▼", "&7최대값 : 6, 최소값: 1", "" and "&7현재 GUI줄 : &f%{shop::%{_name}%}%"
	set slot 7 of {_gui} to nether star named "&e가격 설정" with lore "", "&f클릭시 가격설정 창으로 이동합니다.", "&fGUI가 열리며 가격을 설정하고싶은 아이템을 클릭하여" and "&f가격을 설정할 수 있습니다."
	open {_gui} to {_p}
function OpenShopItems(name: text,name2: text,p: player):
	set {_gui} to chest inventory with {shop::%{_name}%} row with name "{@a} %{_name2}%"
	loop {shop::%{_name}%} * 9 times:
		if {shop::%{_name}%::item::%loop-num - 1%} is set:
			set slot loop-num - 1 of {_gui} to {shop::%{_name}%::item::%loop-num - 1%}
	open {_gui} to {_p}
function OpenShopDisplayItem(name:text,name2:text,p:player):
	set {_gui} to chest inventory with {shop::%{_name}%} row with name "{@a} %{_name2}%"
	loop {shop::%{_name}%} * 9 times:
		if {shop::%{_name}%::item::%loop-num - 1%} is set:
			set slot loop-num - 1 of {_gui} to GetShopDisplayItem("%{_name}%","%loop-num - 1%" parsed as integer)
	open {_gui} to {_p}
function OpenShopPrice(name:text,slot:text,p:player):
	set {_gui} to chest inventory with 1 row with name "{@a} 가격설정 {@c}- %{_name}% {@c}- %{_slot}%"
	set slot 1 of {_gui} to paper named "&a구매가격 설정" with lore "", "&f클릭시 구매가격 설정 창으로 이동합니다.", "&f구매가격 설정창에 아이템을 올려두고 GUI를 닫으면 해당 아이템의" and "&f구매가격이 설정됩니다."
	set slot 4 of {_gui} to paper named "&b판매가격 설정" with lore "", "&f클릭시 판매가격 설정 창으로 이동합니다.", "&f판매가격 설정창에 아이템을 올려두고 GUI를 닫으면 해당 아이템의" and "&f판매가격이 설정됩니다."
	set slot 7 of {_gui} to book named "&6설명" with lore "", "&f구매나 판매가격창에 아이템을 넣으면 가격을 아이템으로 설정할 수 있고,", "&f수표를 넣으면 가격을 포인트로 설정할 수 있습니다.", "&f예를 들어 구매가격 설정창에 1000달러 수표를 넣으면" and "&f아이템의 구매비용이 1000달러가 됩니다."
	open {_gui} to {_p}
function SellShopItem(name:text,slot:integer,amount:integer,p:player):
	size of {shop::%{_name}%::price.sell::%{_slot}%::*} is not 0
	set {_u} to uuid of {_p}
	set {_gui} to chest inventory with 6 row with name ""
	loop 36 times:
		set slot loop-value - 1 of {_gui} to slot loop-value - 1  of {_p}'s inventory	
	loop {_amount} times:
		add {shop::%{_name}%::price.sell::%{_slot}%::*} to {_item::*}
	remove {_amount} of {shop::%{_name}%::item::%{_slot}%} from {_gui}
	loop {_item::*}:
		set {_v} to loop-value
		if "%name of {_v}%" contains "{@c}":
			set {_nl} to "%name of {_v}%"
			set {_price::*} to {_nl} split by "{@c}"
			add "%uncolored {_price::1}%" parsed as integer to {_p::%{_price::2}%}
			remove loop-value from {_item::*}	
	add {_item::*} to {_gui}
	if size of all items in {_gui} > 36:
		send "{@a} 인벤토리 자리가 부족해 아이템을 판매할 수 없습니다." to {_p}
		play sound "entity.villager.no" with volume 1 with pitch 1 to {_p}
		stop
	else:			
		if amount of {shop::%{_name}%::item::%{_slot}%} in {_p}'s inventory >= {_amount}:
			if name of {shop::%{_name}%::item::%{_slot}%} is set:
				send "{@a} %name of {shop::%{_name}%::item::%{_slot}%}%을(를) %{_amount}%개 판매하였습니다." to {_p}
			else:
				send "{@a} %type of {shop::%{_name}%::item::%{_slot}%}%을(를) %{_amount}%개 판매하였습니다." to {_p}
			play sound "entity.arrow.hit_player" with volume 1 with pitch 1 to {_p}			
			remove {_amount} of {shop::%{_name}%::item::%{_slot}%} from {_p}'s inventory
			loop {_p::*}:
				if {shop::point::%loop-index%} is "\m":
					add loop-value to {_p}'s money
				else:
					set {_t} to "%{shop::point::%loop-index%}%"
					replace all "\u" with "%{_u}%" in {_t}
					replace all "\p" with "%{_p}%" in {_t}				
					add loop-value to {%{_t}%}
			add {_item::*} to {_p}'s inventory
		else:
			send "{@a} 아이템이 부족해 상품을 판매할 수 없습니다." to {_p}
			play sound "entity.villager.no" with volume 1 with pitch 1 to {_p}
function BuyShopItem(name:text,slot:integer,amount:integer,p:player):
	size of {shop::%{_name}%::price.buy::%{_slot}%::*} is not 0
	set {_u} to uuid of {_p}
	set {_gui} to chest inventory with 6 row with name ""
	loop 36 times:
		set slot loop-value - 1 of {_gui} to slot loop-value - 1  of {_p}'s inventory	
	loop {_amount} times:
		add {shop::%{_name}%::price.buy::%{_slot}%::*} to {_item::*}
	add {_amount} of {shop::%{_name}%::item::%{_slot}%} to {_gui}
	loop {_item::*}:
		set {_v} to loop-value
		if "%name of {_v}%" contains "{@c}":
			set {_nl} to "%name of {_v}%"
			set {_price::*} to {_nl} split by "{@c}"
			add "%uncolored {_price::1}%" parsed as integer to {_p::%{_price::2}%}
			remove loop-value from {_item::*}
		else:	
			if "%name of {_v}%" is "<none>":
				set {_n} to "%type of {_v}%"
			else:
				set {_n} to name of {_v}
			set {_%{_n}%} to {_v}	
			add item amount of {_v} to {_items::%{_n}%}
	loop {_p::*}:
		if {shop::point::%loop-index%} is "\m":
			if {_p}'s money < loop-value:
				send "{@a} 포인트가 부족해 상품을 구매할 수 없습니다." to {_p}
				play sound "entity.villager.no" with volume 1 with pitch 1 to {_p}
				stop
		else:
			set {_t} to "%{shop::point::%loop-index%}%"
			replace all "\u" with "%{_u}%" in {_t}
			replace all "\p" with "%{_p}%" in {_t}
			if {%{_t}%} < loop-value:
				send "{@a} 포인트가 부족해 상품을 구매할 수 없습니다." to {_p}
				play sound "entity.villager.no" with volume 1 with pitch 1 to {_p}
				stop		
	loop {_items::*}:
		set {_v} to {_%loop-index%}
		if amount of {_v} in {_p}'s inventory < loop-value:
			send "{@a} 아이템이 부족해 상품을 구매할 수 없습니다." to {_p}
			play sound "entity.villager.no" with volume 1 with pitch 1 to {_p}
			stop					
		
	remove {_item::*} from {_gui}
	if size of all items in {_gui} > 36:
		send "{@a} 인벤토리 자리가 부족해 아이템을 판매할 수 없습니다." to {_p}
		play sound "entity.villager.no" with volume 1 with pitch 1 to {_p}
		stop
	else:		
		if name of {shop::%{_name}%::item::%{_slot}%} is set:
			send "{@a} %name of {shop::%{_name}%::item::%{_slot}%}%을(를) %{_amount}%개 구매하였습니다." to {_p}
		else:
			send "{@a} %type of {shop::%{_name}%::item::%{_slot}%}%을(를) %{_amount}%개 구매하였습니다." to {_p}
		play sound "entity.arrow.hit_player" with volume 1 with pitch 1 to {_p}			
		give {_amount} of {shop::%{_name}%::item::%{_slot}%} to {_p}
		loop {_p::*}:
			if {shop::point::%loop-index%} is "money":
				remove loop-value from {_p}'s money
			else:
				set {_t} to "%{shop::point::%loop-index%}%"
				replace all "uuid" with "%{_u}%" in {_t}
				replace all "player" with "%{_p}%" in {_t}				
				remove loop-value from {%{_t}%}
		remove {_item::*} from {_p}'s inventory			
		
command /상점 [<text>] [<text>] [<text>]:
	permission: shop.set
	aliases: shop
	trigger:
		if arg 1 is not set:
			send "&b-----[ &fShop &b]-----"
			send "{@a} /상점 목록"
			send "{@a} /상점 제거 이름"
			send "{@a} /상점 생성 이름"
			send "{@a} /상점 설정 이름"
			send "{@a} /상점 열기 이름"
			stop
		if arg 1 is "목록":
			if size of {shop::*} is 0:
				send "{@a} 생성된 상점이 없습니다."
			send "&b-----[ &fShop List &b]-----"
			loop {shop::*}:
				send "%loop-index% - %loop-value%줄 %size of {shop::%loop-index%::item::*}%개의 아이템."
			stop
		if arg 2 is not set:
			send "{@a} 상점의 이름을 입력해주세요."
			stop
		if arg 1 is "생성":				
			if {shop::%arg-2%} is set:
				send "{@a} 이미 존재하는 상점 입니다."
				stop			
			if arg-2 contains "-":
				send "{@a} 상점이름에는 '-'을 포함할 수 없습니다."
				stop
			if arg-2 contains "&":
				send "{@a} 상점이름에는 '&'을 포함할 수 없습니다."
				stop				
			send "{@a} &6%arg-2% 상점이 생성되었습니다."
			set {shop::%arg-2%} to 6
			stop
		if {shop::%arg-2%} is not set:
			send "{@a} 상점이 존재하지 않습니다."
			stop				
		if arg 1 is "열기":
			OpenShopDisplayItem(arg-2, "&c&r&f상점 {@c}- %arg-2%", player)
		if arg 1 is "설정":
			OpenShopSet("%arg-2%",player)
			stop	
		if arg 1 is "제거":
			delete {shop::%arg-2%}
			delete {shop::%arg-2%::*}
			delete {shop::%arg-2%::item::*}
			loop {shop::%arg-2%::price::*}:
				delete {shop::%arg-2%::price::%loop-index%::*}
			send "{@a} &6%arg-2% 상점이 제거되었습니다."
on rightclick on entity:
	if uncolored name of event-entity contains "[S]":
		set {_name} to uncolored name of event-entity
		replace all "[S]" and " " with "" in {_name}
		OpenShopDisplayItem({_name}, "&c&r&f상점 {@c}- %{_name}%", player)
on inventory click:
	if Inventory Action is nothing:
		stop
	if name of player's top inventory contains "{@a}":
		set {_n::*} to name of player's top inventory split by " {@c}- "
		if name of player's top inventory contains "{@a} 가격설정아이템":
			cancel event
			event-inventory is player's top inventory
			OpenShopPrice({_n::2},"%index of event-slot% ",player)			
		else if name of player's top inventory contains "{@a} 가격설정":
			cancel event
			event-inventory is player's top inventory
			set {_slot} to uncolored {_n::3}
			replace all " " with "" in {_slot}
			if index of event-slot is 1:
				set {_gui} to chest inventory with 6 row with name "{@a} 구매가격설정 {@c}- %{_n::2}% {@c}- %{_n::3}%"
				loop {shop::%{_n::2}%::price.buy::%{_slot}%::*}:
					add loop-value to {_gui}
				open {_gui} to player
			else if index of event-slot is 4:
				set {_gui} to chest inventory with 6 row with name "{@a} 판매가격설정 {@c}- %{_n::2}% {@c}- %{_n::3}%"
				loop {shop::%{_n::2}%::price.sell::%{_slot}%::*}:
					add loop-value to {_gui}
				open {_gui} to player
		else if name of player's top inventory contains "{@a} &c&r&f상점":
			cancel event
			event-inventory is player's top inventory
			if "%click type%" contains "left":
				set {_j} to 9999
				loop {shop::%{_n::2}%::price.buy::%index of event-slot%::*}:
					set {_v} to loop-value
					if "%name of {_v}%" contains "{@c}":
						set {_nl} to "%name of {_v}%"
						set {_price::*} to {_nl} split by "{@c}"
						add "%uncolored {_price::1}%" parsed as integer to {_p::%{_price::2}%}
						remove loop-value from {_item::*}
					else:	
						if "%name of {_v}%" is "<none>":
							set {_n} to "%type of {_v}%"
						else:
							set {_n} to name of {_v}
						set {_%{_n}%} to {_v}	
						add item amount of {_v} to {_items::%{_n}%}
				loop {_p::*}:
					if {shop::point::%loop-index%} is "\m":
						set {_t} to player's money
					else:
						set {_t} to "%{shop::point::%loop-index%}%"
						replace all "\u" with "%uuid of player%" in {_t}
						replace all "\p" with "%player%" in {_t}
						set {_t} to {%{_t}%}
					set {_i} to round down ({_t} / loop-value)
					if {_i} < {_j}:
						set {_j} to {_i}
				loop {_items::*}:
					set {_v} to {_%loop-index%}
					set {_i} to round down (amount of {_v} in player's inventory / item amount of {_v})
					if {_i} < {_j}:
						set {_j} to {_i}		
				if "%click type%" contains "shift":
					if {_j} is 0:
						set {_j} to 999
					if {_j} < 64:
						BuyShopItem({_n::2},"%index of event-slot%" parsed as integer,{_j},player)
					else:
						BuyShopItem({_n::2},"%index of event-slot%" parsed as integer,64,player)
					stop
				BuyShopItem({_n::2},"%index of event-slot%" parsed as integer,1,player)
			else if "%click type%" contains "right":
				if "%click type%" contains "shift":
					set {_a} to amount of {shop::%{_n::2}%::item::%index of event-slot%} in player's inventory
					if {_a} is 0:
						set {_a} to 999
					if {_a} < 64:
						SellShopItem({_n::2},"%index of event-slot%" parsed as integer,"%{_a}%" parsed as integer ,player)
					else:
						SellShopItem({_n::2},"%index of event-slot%" parsed as integer,64,player)
					stop
				SellShopItem({_n::2},"%index of event-slot%" parsed as integer,1,player)	
		else if name of player's top inventory contains "{@a} 설정":
			cancel event
			event-inventory is player's top inventory
			if index of event-slot is 1:
				OpenShopItems({_n::2}, "아이템설정 {@c}- %{_n::2}%",player)
				stop
			else if index of event-slot is 4:
				if Inventory Action is pickup all:
					if {shop::%{_n::2}%} is not 6:
						add 1 to {shop::%{_n::2}%}
				else if Inventory Action is pickup half:
					if {shop::%{_n::2}%} is not 1:
						add -1 to {shop::%{_n::2}%}
				OpenShopSet({_n::2},player)
				stop
			else if index of event-slot is 7:
				OpenShopDisplayItem({_n::2}, "가격설정아이템 {@c}- %{_n::2}%",player)
on inventory close:
	if name of event-inventory contains "{@a}":
		wait a tick
		set {_n::*} to name of event-inventory split by " {@c}- "
		if name of event-inventory contains "{@a} 아이템설정":
			loop {shop::%{_n::2}%} * 9 times:
				if slot loop-num - 1 of event-inventory is air:
					delete {shop::%{_n::2}%::item::%loop-num - 1%}
				else:
					set {shop::%{_n::2}%::item::%loop-num - 1%} to slot loop-num - 1 of event-inventory
			send "{@a} 아이템이 설정되었습니다." to player
			OpenShopSet("%{_n::2}%",player)
		if name of event-inventory contains "{@a} 가격설정아이템":	
			if name of player's top inventory is "container.crafting":
				OpenShopSet("%{_n::2}%",player)
		else if name of event-inventory contains "{@a} 가격설정":
			if name of player's top inventory is "container.crafting":
				OpenShopDisplayItem({_n::2}, "가격설정아이템 {@c}- %{_n::2}%",player)
		if name of event-inventory contains "{@a} 판매가격설정":
			set {_name2} to "sell"
		if name of event-inventory contains "{@a} 구매가격설정":
			set {_name2} to "buy"
		if {_name2} is set:		
			if {_name2} is "buy":
				send "{@a} 구매가격을 설정하였습니다." to player
			else:
				send "{@a} 판매가격을 설정하였습니다." to player
			set {_slot} to uncolored {_n::3}
			replace all " " with "" in {_slot}
			delete {shop::%{_n::2}%::price.%{_name2}%::%{_slot}%::*}
			loop all items in event-inventory:
				add item amount of loop-value of loop-value to {shop::%{_n::2}%::price.%{_name2}%::%{_slot}%::*}
			if size of {shop::%{_n::2}%::price.%{_name2}%::%{_slot}%::*} is 0:
				delete {shop::%{_n::2}%::price.%{_name2}%::%{_slot}%::*}
			if name of player's top inventory is "container.crafting":
				OpenShopPrice({_n::2},"%{_slot}%",player)